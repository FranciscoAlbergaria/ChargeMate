@startuml EV Driver - Book Charging Slot & Payment

actor "EV Driver" as Driver
participant "Web Client" as Web
participant "Nginx\nReverse Proxy" as Nginx
participant "Backend\n(Spring Boot REST API)" as Backend
participant "Reservation Service" as Reservation
participant "Station Service" as Station
participant "Payment Domain" as PaymentDomain
participant "Payment API\n(External)" as PaymentAPI
database "PostgreSQL" as DB

== Login ==
Driver -> Web : Enter credentials
Web -> Nginx : POST /api/login
Nginx -> Backend : POST /api/login
Backend -> DB : Validate credentials
DB --> Backend : User info
Backend --> Nginx : Auth token
Nginx --> Web : Auth token

== Discover Stations ==
Driver -> Web : Open map
Web -> Nginx : GET /api/stations/nearby
Nginx -> Backend : GET /api/stations/nearby
Backend -> Station : Fetch stations
Station -> DB : Query stations
DB --> Station : Station list
Station --> Backend : Station list
Backend --> Nginx : Station list
Nginx --> Web : Station list

== Book Slot ==
Driver -> Web : Select slot & book
Web -> Nginx : POST /api/reservations
Nginx -> Backend : POST /api/reservations
Backend -> Reservation : Create reservation
Reservation -> DB : Insert reservation
DB --> Reservation : Success
Reservation --> Backend : Reservation confirmed
Backend --> Nginx : Reservation confirmed
Nginx --> Web : Reservation confirmed

== Execute Payment ==
Driver -> Web : Confirm payment
Web -> Nginx : POST /api/payments
Nginx -> Backend : POST /api/payments
Backend -> PaymentDomain : Prepare payment
PaymentDomain -> PaymentAPI : Process payment (REST)
PaymentAPI --> PaymentDomain : Payment result
PaymentDomain -> DB : Store payment record
DB --> PaymentDomain : Success
PaymentDomain --> Backend : Payment confirmation
Backend --> Nginx : Payment confirmation
Nginx --> Web : Payment confirmation

@enduml
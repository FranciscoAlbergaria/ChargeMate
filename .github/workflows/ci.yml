name: ChargeMate CI/CD

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build project and run tests
        working-directory: backend
        run: mvn -B clean verify
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Upload test results to Xray (JUnit)
        run: |
          mvn -f backend/pom.xml \
            -Dxray.clientId=${{ secrets.XRAYID }} \
            -Dxray.clientSecret=${{ secrets.XRAYSECRET }} \
            -Dxray.testFormat=junit \
            -Dxray.testPaths=backend/target/surefire-reports/*.xml \
            -Dxray.testPlanKey=${{ vars.TESTPLANKEY }} \
            -Dxray.testEnvironment=ci \
            xray:import-results

      - name: Upload coverage report to Xray (Jacoco)
        run: |
          mvn -f backend/pom.xml \
            -Dxray.clientId=${{ secrets.XRAYID }} \
            -Dxray.clientSecret=${{ secrets.XRAYSECRET }} \
            -Dxray.testFormat=coverage \
            -Dxray.testPaths=backend/target/site/jacoco/jacoco.xml \
            -Dxray.testPlanKey=${{ vars.TESTPLANKEY }} \
            -Dxray.testEnvironment=ci \
            xray:import-results
name: ChargeMate CI/CD


on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]
    types: [opened, synchronize, reopened]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'zulu'
        cache: maven

    - name: Cache SonarQube packages
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build and analyze (SonarCloud)
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -f backend/pom.xml -Dsonar.projectKey=FranciscoAlbergaria_ChargeMate -Dsonar.organization=franciscoalbergaria -Dsonar.host.url=${SONAR_HOST_URL} -Dsonar.login=${SONAR_TOKEN}

    - name: Build and run unit tests
      run: mvn -B package -f backend/pom.xml

    - name: Run integration tests
      run: mvn -B integration-test verify -f backend/pom.xml

    - name: Add code coverage information to PR
      id: jacoco-pr
      uses: madrapps/jacoco-report@v1.7.1
      if: github.event_name == 'pull_request'
      with:
        paths: |
          ${{ github.workspace }}/**/target/site/jacoco-merged-test-coverage-report/jacoco.xml 
        token: ${{ secrets.GITHUB_TOKEN }}
        min-coverage-overall: 80
        min-coverage-changed-files: 80

    - name: List test reports
      run: ls -l backend/reports

    - name: Push results to Xray on Jira Cloud
      if: always()
      env:
        XRAYCLOUD_CLIENT_ID: ${{ secrets.XRAYID }}
        XRAYCLOUD_CLIENT_SECRET: ${{ secrets.XRAYSECRET }}
        XRAY_PROJECT_KEY: ${{ vars.XRAY_PROJECT_KEY }}
        REVISON: ci-test
        TEST_ENVIRONMENT: java17
      run: mvn -f backend/pom.xml -Dxray.clientId=${{ env.XRAYCLOUD_CLIENT_ID }} -Dxray.clientSecret=${{ env.XRAYCLOUD_CLIENT_SECRET }} -Dxray.testEnvironment=${{ env.TEST_ENVIRONMENT }} -Dxray.revision=${{ env.REVISON }} -Dxray.projectKey=${{ env.XRAY_PROJECT_KEY }} -Dxray.reportFile=backend/reports/TEST-com.chargemate.controller.UserRegistrationControllerTest.xml xray:import-results